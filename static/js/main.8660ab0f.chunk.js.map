{"version":3,"sources":["gt350-data.js","Gt350.js","reportWebVitals.js","index.js"],"names":["years","colors","colorsByYear","reduce","p","year","filter","includes","map","name","hex","ColorCard","style","background","height","width","border","App","className","display","gridTemplateColumns","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAAMA,EAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,MAEjCC,EAAS,CACb,CAAC,iBAAkB,UAAW,CAACD,EAAM,GAAIA,EAAM,KAC/C,CAAC,qBAAsB,UAAW,CAACA,EAAM,KACzC,CAAC,mBAAoB,UAAW,CAACA,EAAM,KACvC,CAAC,wBAAyB,UAAW,CAACA,EAAM,GAAIA,EAAM,KACtD,CAAC,eAAgB,UAAW,CAACA,EAAM,KACnC,CAAC,eAAgB,UAAW,CAACA,EAAM,KACnC,CAAC,gBAAiB,UAAU,CAACA,EAAM,KACnC,CAAC,YAAa,UAAW,CAACA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KACpD,CAAC,iBAAkB,UAAW,CAACA,EAAM,GAAIA,EAAM,KAC/C,CAAC,iBAAkB,UAAW,CAACA,EAAM,GAAIA,EAAM,KAC/C,CAAC,WAAY,UAAW,CAAC,MACzB,CAAC,cAAe,UAAW,CAACA,EAAM,GAAIA,EAAM,KAC5C,CAAC,eAAgB,UAAW,CAAC,MAC7B,CAAC,WAAY,UAAW,CAAC,MACzB,CAAC,YAAa,UAAW,CAACA,EAAM,KAChC,CAAC,WAAY,UAAW,CAACA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KACnD,CAAC,eAAgB,UAAW,CAAC,MAC7B,CAAC,gBAAiB,UAAW,CAACA,EAAM,GAAIA,EAAM,GAAIA,EAAM,KACxD,CAAC,iBAAkB,UAAW,CAACA,EAAM,KACrC,CAAC,gBAAiB,UAAW,CAACA,EAAM,GAAIA,EAAM,KAC9C,CAAC,kBAAmB,UAAW,CAACA,EAAM,MAGlCE,EAAeF,EAAMG,QAAO,SAACC,EAAGC,GAAJ,mBAAC,eAC9BD,GAD6B,kBAE/BC,EAAOJ,EACLK,QAAO,gBAAMN,EAAN,2BAAiBA,EAAMO,SAAS,MAAQP,EAAMO,SAASF,MAC9DG,KAAI,yCAAkB,CAAEC,KAApB,KAA0BC,IAA1B,aACL,I,OC5BEC,EAAY,SAAC,GAAD,IAChBD,EADgB,EAChBA,IACAD,EAFgB,EAEhBA,KAFgB,OAIhB,gCACE,qBAAKG,MAAO,CAAEC,WAAYH,EAAKI,OAAQ,OAAQC,MAAO,OAAQC,OAAQ,qBACtE,8BAAMP,QAyBKQ,MArBf,WAEE,OACE,qBAAKC,UAAU,MAAf,SAEGlB,EAAMQ,KAAI,SAAAH,GAAI,OACb,gCACE,6BAAKA,IACL,gCACE,wCACA,qBAAKO,MAAO,CAAEO,QAAS,OAAQC,oBAAqB,mBAApD,SACGlB,EAAaG,GAAMG,KAAI,gBAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,IAAR,OAAiB,cAAC,EAAD,CAAiBD,OAAMC,kBAL5DL,SCPHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8660ab0f.chunk.js","sourcesContent":["const years = [2016, 2017, 2018, 2019, 2020]\n\nconst colors = [\n  ['Avalanche Grey', '#cacbd3', [years[0], years[1]] ],\n  ['Competition Orange', '#f6650a', [years[0]] ],\n  ['Deep Impact Blue', '#2923a7', [years[0]] ],\n  ['Ford Performance Blue', '#2b70c0', [years[3], years[4]] ],\n  ['Grabber Blue', '#02abfa', [years[1]] ],\n  ['Grabber Lime', '#b1da4f', [years[4]] ],\n  ['Iconic Silver', '#90919a',[years[4]] ],\n  ['Kona Blue', '#202d55', [years[2], years[3], years[4]] ],\n  ['Lead Foot Gray', '#737982', [years[2], years[3]] ],\n  ['Lightning Blue', '#0c1ab7', [years[1], years[2]] ],\n  ['Magnetic', '#bfc7ca', ['*'] ], \n  ['Orange Fury', '#ffa750', [years[2], years[3]] ],\n  ['Oxford White', '#ebf2ff', ['*'] ],\n  ['Race Red', '#dd0000', ['*'] ],\n  ['Rapid Red', '#a5212d', [years[4]] ],\n  ['Ruby Red', '#3f1417', [years[1], years[2], years[3]] ], \n  ['Shadow Black', '#08090b', ['*'] ],\n  ['Triple Yellow', '#ddb40b', [years[0], years[1], years[2]] ],\n  ['Twister Orange', '#e25702', [years[4]] ],\n  ['Velocity Blue', '#004ce5', [years[3], years[4]] ],\n  ['Wimbledon White', '#d2cac1', [years[4]] ],\n]\n\nconst colorsByYear = years.reduce((p, year) => ({\n  ...p,\n  [year]: colors\n    .filter(([, , years]) => years.includes('*') || years.includes(year))\n    .map(([name, hex]) => ({ name, hex }))\n}), {} )\n\nexport {\n  colorsByYear,\n  years,\n}","import './App.css';\nimport { colorsByYear, years } from './gt350-data'\n\nconst ColorCard = ({\n  hex,\n  name\n}) => (\n  <div>\n    <div style={{ background: hex, height: '50px', width: '50px', border: '1px solid white'}}></div>\n    <div>{name}</div>\n  </div>\n)\n\nfunction App() {\n  // const formatNumber = num => new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(num)\n  return (\n    <div className=\"App\">\n\n      {years.map(year => (\n        <div key={year}>\n          <h1>{year}</h1>\n          <div>\n            <h2>Colors</h2>\n            <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr 1fr'}}>\n              {colorsByYear[year].map(({name, hex}) => <ColorCard {...{ name, hex }} />)}\n            </div>\n          </div>\n        </div>\n      ))}\n\n    </div>\n  );\n}\n\nexport default App;\n\n// sources:\n// https://mustangfanclub.com/shelby-gt350-gt350r-production-numbers/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Gt350';\n// import App from './Dunno'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}