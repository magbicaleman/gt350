{"version":3,"sources":["gt350-data.js","logo-gt350.svg","Gt350.js","reportWebVitals.js","index.js"],"names":["years","basePrices","map","GT350","GT350R","colors","stripes","slice","grouppedByYear","reduce","p","year","filter","includes","name","hex","i","bgColor","accentColor","prices","Object","entries","_extends","assign","target","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","console","log","d","fill","SvgLogoGt350","_ref","svgRef","title","titleId","props","width","height","viewBox","xmlns","ref","id","ForwardRef","PriceFormat","amount","label","price","Intl","NumberFormat","style","currency","format","ColorCard","background","border","StripeCard","className","App","trim","display","gridTemplateColumns","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.815c8130.chunk.js","sourcesContent":["const years = [2016, 2017, 2018, 2019, 2020]\n\nconst basePrices = [\n  [47795, 61295],\n  [54845, 62345],\n  [55940, 63440],\n  [59140, 67135],\n  [59140, 72135],\n].map(([GT350, GT350R]) => ({\n  GT350,\n  GT350R,\n}))\n\nconst colors = [\n  ['Avalanche Grey', '#cacbd3', [years[0], years[1]] ],\n  ['Competition Orange', '#f6650a', [years[0]] ],\n  ['Deep Impact Blue', '#2923a7', [years[0]] ],\n  ['Ford Performance Blue', '#2b70c0', [years[3], years[4]] ],\n  ['Grabber Blue', '#02abfa', [years[1]] ],\n  ['Grabber Lime', '#b1da4f', [years[4]] ],\n  ['Iconic Silver', '#90919a',[years[4]] ],\n  ['Kona Blue', '#202d55', [years[2], years[3], years[4]] ],\n  ['Lead Foot Gray', '#737982', [years[2], years[3]] ],\n  ['Lightning Blue', '#0c1ab7', [years[1], years[2]] ],\n  ['Magnetic', '#bfc7ca', ['*'] ], \n  ['Orange Fury', '#ffa750', [years[2], years[3]] ],\n  ['Oxford White', '#ebf2ff', ['*'] ],\n  ['Race Red', '#dd0000', ['*'] ],\n  ['Rapid Red', '#a5212d', [years[4]] ],\n  ['Ruby Red', '#3f1417', [years[1], years[2], years[3]] ], \n  ['Shadow Black', '#08090b', ['*'] ],\n  ['Triple Yellow', '#ddb40b', [years[0], years[1], years[2]] ],\n  ['Twister Orange', '#e25702', [years[4]] ],\n  ['Velocity Blue', '#004ce5', [years[3], years[4]] ],\n  ['Wimbledon White', 'rgb(254, 252, 249)', [years[4]] ],\n]\n\nconst stripes = [\n  ['Black/White', '--black', '--accent-white', years.slice(0,3)],\n  ['White/Black', '--white', '--accent-black', years.slice(0,3)],\n  ['Blue/Black', '--blue', '--accent-black', years.slice(0,3)],\n  ['Black/LT Magnetic', '--black', '--accent-lt-magnetic', years.slice(-2)],\n  ['White/LT Magnetic', '--white', '--accent-lt-magnetic', years.slice(-2)],\n  ['Kona Blue/LT Magnetic', '--kona', '--accent-lt-magnetic', years.slice(-2)],\n  ['White/Red', '--white', '--accent-red', ['*']],\n  ['Black/Red', '--black', '--accent-red', ['*']],\n  ['Blue/Red', '--blue', '--accent-red', years.slice(0,3)],\n  ['Kona Blue/Red', '--kona', '--accent-red', years.slice(-2)],\n  ['Guardsman Blue', '--guardsman-blue', '', years.slice(-1)],\n  ['No Stripe', '', '--no-stripe', ['*']],\n]\n\nconst colorsByYear = years.reduce((p, year) => ({\n  ...p,\n  [year]: colors\n    .filter(([, , years]) => years.includes('*') || years.includes(year))\n    .map(([name, hex]) => ({ name, hex }))\n}), {} )\n\nconst grouppedByYear = years.reduce((p, year, i) => ({\n  ...p,\n  [year]: {\n    colors: colors\n      .filter(([, , years]) => years.includes('*') || years.includes(year))\n      .map(([name, hex]) => ({ name, hex })),\n    stripes: stripes\n      .filter(([, , , years]) => years.includes('*') || years.includes(year))\n      .map(([name, bgColor, accentColor]) => ({ name, bgColor, accentColor })),\n    prices: Object.entries(basePrices[i]),\n  }\n}), {} )\n\nconsole.log('grouppedByYear', grouppedByYear)\n\nexport {\n  colorsByYear,\n  years,\n  grouppedByYear,\n  basePrices\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M31.1089 2.99985C21.5089 6.33318 17.1089 12.8665 8.70894 35.6665C0.042277 59.1332 -1.29105 64.7331 0.975611 70.0665C4.17561 77.6665 4.30894 77.6665 67.6423 77.6665C122.176 77.6665 126.042 77.5332 130.842 75.1332C137.242 71.9332 141.242 66.0665 146.976 51.5332C153.109 35.9332 153.509 33.5332 150.976 31.1332C149.242 29.2665 144.176 28.9998 115.642 28.9998H82.3089L80.4422 33.2665L78.7089 37.6665L108.176 38.3332L137.776 38.9998L137.509 42.3332C137.242 48.1998 131.509 61.5332 127.642 65.2665L124.042 68.9998H68.5756C14.8423 68.9998 13.1089 68.8665 11.7756 66.3332C10.7089 64.1998 11.9089 59.6665 17.7756 43.3998C26.5756 19.1332 28.4423 15.6665 34.4423 12.7332C38.8423 10.4665 48.5756 10.3332 179.909 10.3332H320.709L322.042 5.66651L323.509 0.999849H180.042C59.7756 1.13318 35.6423 1.39985 31.1089 2.99985V2.99985ZM370.442 4.46652C369.642 6.33319 369.109 8.46652 369.109 9.13319C369.109 9.79985 392.042 10.3332 426.975 10.3332C491.242 10.3332 489.109 10.0665 489.109 18.9998C489.109 24.8665 484.842 34.5998 480.842 37.7998C478.175 39.9332 477.775 41.2665 478.175 45.7998C478.842 53.3998 474.575 62.7332 468.842 66.3332C464.575 68.8665 462.309 68.9998 405.509 68.9998H346.709L345.242 73.1332C344.442 75.5332 343.775 77.6665 343.775 77.7998C343.775 79.1332 466.309 78.1998 471.109 76.8665C474.042 76.0665 478.309 73.3998 480.709 70.8665C485.642 65.5332 490.442 53.6665 490.442 46.3332C490.442 42.5998 491.375 40.1999 493.642 37.9332C497.109 34.4665 501.109 22.9998 501.109 16.7332C501.109 10.4665 497.775 5.53319 491.775 3.13319C487.109 1.26652 478.842 0.999849 429.109 0.999849H371.775L370.442 4.46652V4.46652ZM514.709 23.2665C510.309 35.6665 506.309 46.7332 505.775 47.9332C504.842 50.1998 508.309 50.3332 561.909 50.5998C611.775 50.9998 619.109 51.2665 619.109 52.9998C619.109 54.7332 611.642 54.9998 560.842 55.3998L502.709 55.6665L501.242 59.9332C500.442 62.1998 499.775 64.3332 499.775 64.4665C499.775 64.7332 527.909 64.9998 562.175 64.9998C620.042 64.9998 624.842 64.8665 626.842 62.5998C629.642 59.3998 634.709 46.3332 633.909 44.1998C633.375 42.7332 622.309 42.3332 576.709 42.0665L520.042 41.6665L525.775 26.3332L531.375 10.9998L596.042 10.5999C656.309 10.3332 660.842 10.1999 661.509 7.9332C661.775 6.7332 662.575 4.59986 663.109 3.26653C664.042 1.1332 660.175 0.999849 593.509 0.999849H522.842L514.709 23.2665V23.2665ZM688.442 2.99985C679.509 6.06651 675.509 12.3332 666.309 36.7332C661.775 48.9998 657.775 61.6665 657.509 64.9998C656.975 70.1998 657.375 71.3998 660.442 74.3332L664.042 77.6665L720.842 78.0665C782.042 78.5998 788.575 78.0665 794.842 72.1998C799.775 67.6665 802.442 61.9331 810.575 39.3998C820.575 11.7998 820.575 6.86651 811.109 2.86651C804.442 0.199841 696.309 0.19985 688.442 2.99985V2.99985ZM804.175 13.1332C806.575 16.4665 806.042 18.8665 798.042 41.2665C790.575 62.0665 789.909 63.1332 784.709 66.3332C780.709 68.8665 777.509 68.9998 726.842 68.9998C679.909 68.9998 672.975 68.7332 671.242 66.8665C670.042 65.7998 669.109 64.1998 669.109 63.5332C669.109 61.1332 682.709 24.1998 685.509 19.3998C690.442 10.3332 690.309 10.3332 749.375 10.3332C801.242 10.3332 802.309 10.3332 804.175 13.1332V13.1332Z\",\n  fill: \"black\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M693.103 16.4665C691.503 17.5332 689.236 20.1998 688.303 22.1998C684.436 29.5331 673.903 59.6665 674.436 61.9332C674.836 64.1998 678.036 64.3331 726.569 64.7331C770.303 64.9998 778.836 64.7331 782.036 62.9998C785.103 61.5331 786.836 58.7331 789.903 50.7331C798.169 29.1331 801.369 18.8665 800.436 16.5998C799.636 14.4665 795.369 14.3332 747.903 14.3332C703.103 14.3332 695.636 14.5998 693.103 16.4665V16.4665ZM786.569 24.4665C787.236 25.2665 779.503 47.9332 776.703 53.1332C775.503 55.5332 773.236 55.6665 732.169 55.6665C695.236 55.6665 688.836 55.3998 688.836 53.6665C688.836 51.7998 697.369 27.3998 698.836 24.8665C699.769 23.5331 785.236 23.1332 786.569 24.4665V24.4665ZM35.7696 16.0665C34.1696 16.9998 32.0363 18.9998 30.9696 20.3332C27.9029 24.7332 15.2363 60.9998 16.0363 63.1332C16.7029 64.7332 24.8363 64.9998 68.5696 64.9998C118.703 64.9998 120.57 64.8665 123.903 62.3331C126.836 59.9331 132.836 47.5331 132.836 43.6665C132.836 42.8665 121.903 42.3332 104.836 42.3332H76.8362L75.5029 45.7998C74.7029 47.6665 74.1696 49.7998 74.1696 50.4665C74.1696 51.1332 83.5029 51.6665 96.3029 51.6665C113.37 51.6665 118.303 52.0665 117.903 53.2665C117.37 54.5998 107.103 55.1331 73.7696 55.3998C48.7029 55.5331 30.1696 55.1332 30.1696 54.4665C30.1696 53.5332 37.1029 33.7998 40.1696 25.9332C41.1029 23.7998 46.7029 23.6665 130.97 23.6665C180.436 23.6665 220.836 24.0665 220.836 24.4665C220.836 24.9998 216.703 36.8665 211.503 50.9998C206.436 65.1331 202.17 76.9998 202.17 77.5331C202.17 77.9331 204.703 78.3331 207.903 78.3331H213.503L220.703 58.5998C224.57 47.7998 229.903 33.3998 232.303 26.5998L236.836 14.3332H137.77C60.9696 14.4665 38.1696 14.8665 35.7696 16.0665V16.0665ZM230.17 44.5998C224.036 61.3998 218.836 75.7998 218.436 76.5998C218.036 77.7998 219.636 78.3331 223.77 78.3331H229.77L239.636 50.9998L249.503 23.6665H315.236L316.703 19.5332C317.503 17.1332 318.169 14.9998 318.169 14.8665C318.169 14.5998 300.836 14.3332 279.636 14.3332H241.236L230.17 44.5998V44.5998ZM364.969 18.4665C364.169 20.8665 363.503 22.9998 363.503 23.1332C363.503 23.3998 387.903 23.6665 417.636 23.6665C468.436 23.6665 471.636 23.7998 471.236 25.9332C470.836 28.1998 467.636 28.3331 430.569 28.7331L390.436 28.9998L388.969 33.2665C388.169 35.5332 387.503 37.6665 387.503 37.9332C387.503 38.1998 406.836 38.3331 430.569 38.0665C463.236 37.7998 474.303 37.2665 476.569 35.9332C482.703 32.4665 487.236 16.8665 482.703 15.1332C481.503 14.7332 454.969 14.3332 423.503 14.3332H366.436L364.969 18.4665V18.4665ZM532.969 17.2665C532.436 18.9998 530.569 23.7998 528.969 28.0665C527.503 32.3331 526.169 36.3332 526.169 36.9998C526.169 37.7998 546.969 38.3332 581.503 38.3332C644.036 38.3332 640.036 37.5331 636.969 48.8665C634.703 57.3998 630.436 65.9332 627.769 67.2665C626.569 67.7998 596.703 68.5998 561.636 68.9998L497.636 69.6665L495.903 73.9332L494.169 78.3331H559.236C597.769 78.3331 626.036 77.7998 628.703 76.9998C636.036 74.9998 641.769 68.3331 646.169 56.7331C650.036 46.8665 651.236 36.7331 649.103 33.5331C646.303 29.3998 641.903 28.9998 591.503 28.9998C545.636 28.9998 540.569 28.7331 541.369 26.8665C541.769 25.6665 542.169 24.4665 542.169 24.1998C542.169 23.9331 567.636 23.6665 598.703 23.6665H655.236L656.703 19.5332C657.503 17.1332 658.169 14.9998 658.169 14.8665C658.169 14.5998 630.303 14.3332 596.169 14.3332H534.169L532.969 17.2665V17.2665ZM384.303 45.2665C383.903 46.9998 383.503 48.7332 383.503 49.2665C383.503 49.9332 400.303 50.3331 420.703 50.3331C441.236 50.3331 458.836 50.7332 460.036 51.1332C461.103 51.5332 461.636 52.7332 461.236 53.7998C460.703 55.3998 451.903 55.6665 406.036 55.6665H351.503L350.169 59.1332C349.369 60.9998 348.836 63.1332 348.836 63.7998C348.836 65.7998 460.703 65.3998 464.836 63.2665C470.036 60.7332 474.303 53.1331 473.903 47.6665L473.503 42.9998L429.369 42.5998L385.103 42.3332L384.303 45.2665V45.2665Z\",\n  fill: \"black\"\n});\n\nfunction SvgLogoGt350(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 819,\n    height: 50,\n    viewBox: \"0 0 819 79\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogoGt350);\nexport default __webpack_public_path__ + \"static/media/logo-gt350.fe8060c5.svg\";\nexport { ForwardRef as ReactComponent };","import './App.css';\nimport { years, grouppedByYear } from './gt350-data'\nimport { ReactComponent as Logo } from './logo-gt350.svg'\n\nconst PriceFormat = ({ amount, label }) => {\n  const price = new Intl.NumberFormat('en-US', {style: 'currency', currency: 'USD'}).format(amount);\n  return (\n    <div>{label}: {price}</div>\n  )\n}\n\n\nconst ColorCard = ({\n  hex,\n  name\n}) => (\n  <div>\n    <div style={{ background: hex, height: '50px', width: '50px', border: '1px solid white'}}></div>\n    <div>{name}</div>\n  </div>\n)\n\nconst StripeCard = ({\n  accentColor,\n  bgColor,\n  name,\n}) => (\n  <div>\n    <div className={`stripe-color ${bgColor} ${accentColor}`}>\n      <div className=\"stripe\">&nbsp;</div>\n      <div className=\"stripe\">&nbsp;</div>\n    </div>\n    <div>{name}</div>\n  </div>\n)\n\nfunction App() {\n  // const formatNumber = num => new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(num)\n  return (\n    <div className=\"App\">\n      <header>\n        <Logo width=\"200\" />\n      </header>\n\n      <main>\n        {years.map(year => (\n          <div key={year} className=\"year\">\n            <h1 className=\"year__heading\">{year}</h1>\n            <div className=\"year__data\">\n            <h2>Pricing</h2>\n              <div>Base prices</div>\n              {grouppedByYear[year].prices.map(([trim, price]) => <PriceFormat key={trim} amount={price} label={trim} />)} \n              <h2>Colors</h2>\n              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr 1fr'}}>\n                {grouppedByYear[year].colors.map(item => <ColorCard {...item} />)}\n              </div>\n              <h2>Stripe Options</h2>\n              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr 1fr'}}>\n              {grouppedByYear[year].stripes.map(item => <StripeCard {...item} />)}\n              </div>\n            </div>\n          </div>\n        ))}\n      </main>\n\n    </div>\n  );\n}\n\nexport default App;\n\n// sources:\n// https://mustangfanclub.com/shelby-gt350-gt350r-production-numbers/\n// https://docs.google.com/spreadsheets/d/1t12CKnAaJGNNKfOPxAApFMStWioaABhqjzwRpHdKmnE/edit#gid=876107477\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Gt350';\n// import App from './Dunno'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}